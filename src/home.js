//–õ–æ–≥—ñ–∫–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ Home
// –û–ø–∏—Å–∞–Ω–∏–π —É –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
import iziToast from 'izitoast';
// –î–æ–¥–∞—Ç–∫–æ–≤–∏–π —ñ–º–ø–æ—Ä—Ç —Å—Ç–∏–ª—ñ–≤
import 'izitoast/dist/css/iziToast.min.css';

import {
  getCategories,
  getProducts,
  getCategoryProducts,
  getOneProduct,
} from './js/products-api';

import { refs } from './js/refs';

import {
  renderGallery,
  renderProducts,
  showLoadMoreButton,
  hideLoadMoreButton,
  renderProductsAll,
  renderModal,
} from './js/render-function';

refs.categories.addEventListener('click', handleClick);
refs.loadMoreBtn.addEventListener('click', handleLoadMore);
refs.products.addEventListener('click', cardclick);

let currentPage = 1;
let currentCategory = null;

async function showCategories() {
  try {
    const response = await getCategories();
    const info = response;
    renderGallery(info);
  } catch (error) {
    iziToast.error({
      message: '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ!',
      position: 'topRight',
    });
  }
}
showCategories();

async function showProducts(page = 1) {
  try {
    const response = await getProducts(page);
    const items = response.products;
    renderProducts(items);
  } catch (error) {
    console.log('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤:', error);
  }
}

showProducts();

async function handleClick(event) {
  const target = event.target;

  const button = target.closest('.categories__btn');
  if (!button) return; // –ö–ª—ñ–∫ –Ω–µ –ø–æ –∫–Ω–æ–ø—Ü—ñ ‚Äî —ñ–≥–Ω–æ—Ä—É—î–º–æ

  const li = button.closest('.categories_item'); // –∑–Ω–∞—Ö–æ–¥–∏–º–æ –Ω–∞–π–±–ª–∏–∂—á–æ–≥–æ –ø—Ä–µ–¥–∫–∞
  if (!li) return;

  const categoryId = li.dataset.id;
  console.log('–í–∏–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è:', categoryId);

  const allButtons = document.querySelectorAll('.categories__btn');
  allButtons.forEach(btn => btn.classList.remove('categories__btn--active'));
  button.classList.add('categories__btn--active');

  currentCategory = categoryId; // üü† –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é
  currentPage = 1; // üü† –ø–æ—á–∏–Ω–∞—î–º–æ –∑ –ø–µ—Ä—à–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏

  showCategoriesProducts(categoryId); // ‚¨ÖÔ∏è –î–û–î–ê–ô –¶–ï–ô –í–ò–ö–õ–ò–ö

  async function showCategoriesProducts() {
    try {
      const response = await getCategoryProducts(categoryId);
      const items = response.products;
      renderProducts(items);
      if (items.length >= 12) {
        refs.loadMoreBtn.classList.remove('hiddenbtn');
      } else {
        refs.loadMoreBtn.classList.add('hiddenbtn');
      }
    } catch (error) {
      console.log('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤:', error);
    }
  }
}

async function handleLoadMore() {
  currentPage += 1;
  refs.loadMoreBtn.disabled = true;

  try {
    const response = await getProducts(currentPage); // ‚úÖ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ
    const item = response.products;

    renderProductsAll(item);

    // –Ø–∫—â–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –º–µ–Ω—à–µ –Ω—ñ–∂ 12 ‚Äì –±—ñ–ª—å—à–µ –Ω–µ–º–∞—î
    if (item.length < 12) {
      hideLoadMoreButton();
      iziToast.info({
        message: '–£—Å—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ.',
        position: 'bottomCenter',
        timeout: 3000,
      });
    }

    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞
    const card = document.querySelector('.products');
    const cardHeight = card.getBoundingClientRect().height;
    window.scrollBy({
      left: 0,
      top: cardHeight * 3,
      behavior: 'smooth',
    });
  } catch (error) {
    iziToast.error({
      message: '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –∑–æ–±—Ä–∞–∂–µ–Ω—å',
      position: 'topRight',
    });
  } finally {
    refs.loadMoreBtn.disabled = false;
  }
}

async function cardclick(event) {
  const productItem = event.target.closest('.products__item');
  if (!productItem) return; // –ö–ª—ñ–∫ –Ω–µ –≤ –∫–∞—Ä—Ç–∫—É ‚Äî —ñ–≥–Ω–æ—Ä—É—î–º–æ

  const productId = productItem.dataset.id;
  console.log('üÜî ID –ø—Ä–æ–¥—É–∫—Ç—É:', productId);

  try {
    const response = await getOneProduct(productId); // üü¢ –ü–ï–†–ï–î–ê–Ñ–ú–û productId, –Ω–µ "id"
    const product = response; // API –ø–æ–≤–µ—Ä—Ç–∞—î —Å–∞–º –æ–±'—î–∫—Ç, –∞ –Ω–µ product.productId

    const modal = document.querySelector('.modal'); // üü¢ —Å–µ–ª–µ–∫—Ç–æ—Ä –±–µ–∑ 'div.' ‚Äî –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–ª–∞—Å—É
    modal.classList.add('modal--is-open'); // üü¢ –∫–ª–∞—Å –º–∞—î –±—É—Ç–∏ —Ä—è–¥–∫–æ–º, –Ω–µ –∑–º—ñ–Ω–Ω–æ—é

    renderModal(product); // üü¢ –ü–µ—Ä–µ–¥–∞—î–º–æ –¥–∞–Ω—ñ, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ id
  } catch (error) {
    console.log('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø—Ä–æ–¥—É–∫—Ç—É –ø–æ ID:', error);
    iziToast.error({
      message: '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ!',
      position: 'topRight',
    });
  }
}
